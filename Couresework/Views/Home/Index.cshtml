@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Localization
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<MultiLanguage> langLocalizer
@{
    ViewData["Title"] = "Home Page";

}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var loc = langLocalizer["Latest reviews"].Value;
}
@{
    string theme = "light";

    if(Context.Request.Cookies.ContainsKey("theme"))
    {
        if(Context.Request.Cookies["theme"] == "dark")
        {
            theme = "dark";
        }
        
    }
}
<div class="container">
    @if (SignInManager.IsSignedIn(User))
    {
    }
    <div class="d-flex flex-column justify-content-center">
        <form asp-action="Index" asp-controller="Home" asp-antiforgery="true" runat="server">
            <div class="m-3 d-flex flex-row justify-content-center">
                <select class="form-select @theme" id="validationCustom01" name="contentTypeSort">
                    <option selected disabled value="">@Convert.ToString(ViewData["contentTypeSort"])</option>
                    @if (Convert.ToString(ViewData["contentTypeSort"]) != langLocalizer["Latest reviews"].Value)
                    {
                        <option>@langLocalizer["Latest reviews"]</option>
                    }
                    @if (Convert.ToString(ViewData["contentTypeSort"]) != langLocalizer["Popular reviews"].Value)
                    {
                        <option>@langLocalizer["Popular reviews"]</option>
                    }
                    @if (Convert.ToString(ViewData["contentTypeSort"]) != langLocalizer["TAGs"].Value)
                    {
                        <option>@langLocalizer["TAGs"]</option>
                    }
                </select>
                <button class="btn btn-outline-primary" type="submit">@langLocalizer["CHOOSE"]</button>
            </div>
        </form>
    </div>
    @if (Model != null)
    {
        @if(ViewData["contentTypeSort"] == null || Convert.ToString(ViewData["contentTypeSort"]) == langLocalizer["Latest reviews"].Value || Convert.ToString(ViewData["contentTypeSort"]) == langLocalizer["Popular reviews"].Value)
        {
            @foreach (var item in Model)
            {
            <form asp-action="WatchingReview" asp-controller="Home" asp-route-reviewId="@item.Id" asp-route-userId="@UserManager.GetUserId(User)">
                <div class="shadow rounded m-3 d-flex flex-row justify-content-between @theme">
                    <div class="d-flex flex-column justify-content-start">
                        <p class="ms-2 mt-2"><b>@langLocalizer["Topic"]:</b> @item.Name</p>
                        @{
                            string rateValue;
                            if (item.UsersRate == 0)
                            {
                                rateValue = "None";
                            }
                            else
                            {
                                rateValue = $"{item.UsersRate}/5";
                            }
                        }
                        <p class="ms-2"><b>@langLocalizer["Users rate"]:</b> @rateValue</p>
                    </div>
                    <button type="submit" class="btn btn-outline-primary shadow" value="Watch Review">@langLocalizer["Watch Review"]</button>
                </div>
                </form>
            }
        }
        else
        {
                <div class="tagcloud container">
                    <ul>
                        @foreach (var item in TagsRepository.Tags)
                        {
                           <li><a class="@theme" href="@Url.Action("Search", "Home", new{ searchStr = @item}, null)"><span>@item</span></a></li>
                        }
                    </ul>
                </div>
        }
    }

</div>