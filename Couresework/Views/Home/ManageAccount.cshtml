@using Microsoft.AspNetCore.Identity
@using Couresework.Data
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Localization
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject ApplicationDbContext db
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<MultiLanguage> langLocalizer
@{
    ViewData["Title"] = "Home Page";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    string theme = "light";

    if(Context.Request.Cookies.ContainsKey("theme"))
    {
        if(Context.Request.Cookies["theme"] == "dark")
        {
            theme = "dark";
        }
        
    }
    int pagesAmount = 1, currentPage = 1;
    if(ViewData["currentPage"] != null)
    {
       currentPage = Convert.ToInt32(ViewData["currentPage"]); 
    }
    if(ViewData["pagesAmount"] != null)
    {
       pagesAmount = Convert.ToInt32(ViewData["pagesAmount"]); 
    }
}
<div class="container">
    @{
        var userId = UserManager.GetUserId(User);
        var isAdmin = db.UserRoles.FirstOrDefault(obj => obj.UserId == userId && obj.RoleId == "0");
    }
    @if (SignInManager.IsSignedIn(User) && (UserManager.GetUserId(User) == Convert.ToString(ViewData["userID"]) || isAdmin != null))
    {
        <div class="form-floating m-3">
            <a class="btn btn-outline-primary" asp-action="CreatingReview" asp-controller="Home" asp-route-userId="@ViewData["userID"]" value="Create Review">@langLocalizer["New Review"]</a>
        </div>
        <div class="d-flex flex-column justify-content-center">
            <form asp-action="ManageAccount" asp-controller="Home" asp-route-userID="@UserManager.GetUserId(User)" asp-antiforgery="true" runat="server">
                <div class="m-3 d-flex flex-row justify-content-center">
                    <select class="form-select @theme" id="validationCustom01" name="contentTypeSort">
                        <option>@Convert.ToString(ViewData["contentTypeSort"])</option>
                        @if (Convert.ToString(ViewData["contentTypeSort"]) != langLocalizer["Latest reviews"].Value)
                        {
                            <option>@langLocalizer["Latest reviews"]</option>
                        }
                        @if (Convert.ToString(ViewData["contentTypeSort"]) != langLocalizer["Popular reviews"].Value)
                        {
                            <option>@langLocalizer["Popular reviews"]</option>
                        }
                    </select>
                    <button class="btn btn-outline-primary" type="submit">@langLocalizer["CHOOSE"]</button>
                </div>
            </form>
        </div>
        if (Model != null)
        {
            foreach (var item in Model)
            {
                <div class="shadow rounded m-3 d-flex flex-row justify-content-between">
                    <div class="d-flex flex-column justify-content-start">
                        <p class="ms-2 mt-2"><b>@langLocalizer["Topic"]:</b> @item.Name</p>
                        @{
                            string modalId1 = $"#{item.Id}exampleModal";
                            string modalId2 = $"{item.Id}exampleModal";
                            string modalId3 = $"{item.Id}exampleModalLabel";

                            string rateValue;
                            if (item.UsersRate == 0)
                            {
                                rateValue = "None";
                            }
                            else
                            {
                                rateValue = $"{item.UsersRate}/5";
                            }
                        }
                        <p class="ms-2"><b>@langLocalizer["Users rate"]:</b> @rateValue</p>
                    </div>
                    <div class="d-flex flex-row justify-content-end align-items-stretch">
                        <a class="btn btn-outline-primary me-1 shadow" value="Watch Review" asp-action="WatchingReview" asp-controller="Home" asp-route-reviewId="@item.Id" asp-route-userId="@UserManager.GetUserId(User)">@langLocalizer["Watch Review"]</a>
                        <a class="btn btn-outline-success me-1 shadow" value="Edit Review" asp-action="EditingReview" asp-controller="Home" asp-route-reviewId="@item.Id" asp-route-userId="@UserManager.GetUserId(User)">@langLocalizer["Edit Review"]</a>
                        <a class="btn btn-outline-danger shadow" asp-action="DeletingReview" asp-controller="Home" asp-route-reviewId="@item.Id" asp-route-userId="@UserManager.GetUserId(User)">@langLocalizer["Delete Review"]</a>
                    </div>
                </div>
            }
            <nav aria-label="..." class="d-flex flex-row justify-content-center">
              <ul class="pagination pagination-sm">
                    @{
                        for (var i = 1; i <= pagesAmount; i++)
                        {
                            if(i == currentPage)
                            {
                                <li class="page-item active" aria-current="page">
                                  <span class="page-link">@i</span>
                                </li>
                            }
                            else
                            {
                                <li class="page-item"><a class="page-link @theme" href="@Url.Action("ManageAccount", "Home", new {contentTypeSort = ViewData["contentTypeSort"], page = i, userID = userId}, null)">@i</a></li>
                            }
                        }
                    }
              </ul>
            </nav>
        }
    }
    else
    {
        <div class="main-part">
            <a>Access Declined</a>
        </div>
    }
</div>