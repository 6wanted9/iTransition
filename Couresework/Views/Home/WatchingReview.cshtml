@using Microsoft.AspNetCore.Identity
@using Westwind.AspNetCore.Markdown;
@using Couresework.Data;
@using Couresework.Models;
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Localization
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject ApplicationDbContext DB
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<MultiLanguage> langLocalizer
@model Review
@{
    ViewData["Title"] = "Home Page";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    string theme = "light";

    if(Context.Request.Cookies.ContainsKey("theme"))
    {
        if(Context.Request.Cookies["theme"] == "dark")
        {
            theme = "dark";
        }

    }
    var imagesLinks = ViewData["imagesLinks"] as List<string>;
    var comments = DB.Comments.Where(c => c.ReviewId == Model.Id).OrderByDescending(c => c.Id).ToList();
}
<div class="container">
    <div class="form-control @theme rounded m-3">
        <p class=""><b>@langLocalizer["Topic"]:</b> @Model.Name</p>
        <p class=""><b>@langLocalizer["Group"]:</b> @langLocalizer[Model.Group]</p>
        <p class=""><b>@langLocalizer["RevTags"]:</b> @Model.Tags</p>
    </div>
    <div class="form-control @theme border-primary rounded ps-2 mt-3 me-3 ms-3">
        <p><b>@langLocalizer["Review"]:</b></p>
    </div>
    <div class="form-control @theme border-primary rounded ps-2 mt-1 mb-3 me-3 ms-3">
        <p>@Markdown.ParseHtmlString(String.Join("<br>", Model.ReviewText.Split("\n")))</p>
    </div>
    @if(imagesLinks != null)
    {
        <div class="form-control @theme border-0 ps-2 mt-1 mb-3 me-3 ms-3">
            <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                @{
                    int i = 1;
                    foreach(var link in imagesLinks)
                    {
                        if(i == 1)
                        {
                            <div class="carousel-item active">
                                <img class="d-block w-100" src="@link" alt=" @i photo"/>
                            </div>
                        }
                        else
                        {
                            <div class="carousel-item">
                                <img class="d-block w-100" src="@link" alt=" @i photo"/>
                            </div>
                        }
                        i++;
                    }
                }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
                </button>
            </div>
        </div>
    }
    <div class="form-control @theme border-gray rounded m-3">
        <p class="mb-2 ms-2 mt-2"><b>@langLocalizer["Rating"]:</b> @Model.Rating/10</p>
    </div>
    @if (SignInManager.IsSignedIn(User))
    {
        if (UserManager.GetUserId(User) != Model.AuthorId)
        {
            <div class="form-control p-0 border-0 shadow-lg @theme rounded m-3 d-flex flex-row justify-content-between align-items-center">
                <div class="d-flex flex-column justify-content-center">
                    <a class="btn btn-outline-primary" asp-action="LikeReview" asp-controller="ReviewManipulating" asp-route-reviewID="@Model.Id" asp-route-userID="@UserManager.GetUserId(User)" value="@ViewData["likeVal"]">@langLocalizer[ViewData["likeVal"].ToString()]</a>
                    <form asp-action="RateReview" asp-controller="ReviewManipulating" asp-route-reviewID="@Model.Id" asp-route-userID="@UserManager.GetUserId(User)" asp-antiforgery="true" runat="server" class="needs-validation" novalidate>
                        <div class="d-flex flex-row justify-content-start">
                            <select class="form-select @theme" id="validationCustom01" name="rating" required>
                                <option selected disabled value="">@langLocalizer[ViewData["rateMsg"].ToString()] @ViewData["rateVal"]</option>
                                <option>1</option>
                                <option>2</option>
                                <option>3</option>
                                <option>4</option>
                                <option>5</option>
                            </select>
                            <button class="btn btn-outline-primary" type="submit">@langLocalizer["RATE"]</button>
                        </div>
                    </form>
                </div>
                @{
                    string rateValue;
                    if (Model.UsersRate == 0)
                    {
                        rateValue = "None";
                    }
                    else
                    {
                        rateValue = $"{Model.UsersRate}/5";
                    }
                }
                <div class="border border-primary rounded bg-primary text-white text-center align-self-stretch d-flex flex-column justify-content-center">
                    <p class="text-center m-2"><b>@langLocalizer["Users rate"]:</b> @rateValue</p>
                </div>
            </div>
        }
        <div class="form-control p-0 border-0 @theme rounded m-3 d-flex flex-column justify-content-between align-items-stretch">
            <form asp-action="AddComment" asp-controller="ReviewManipulating" asp-route-userId="@UserManager.GetUserId(User)" asp-route-reviewId="@Model.Id" asp-antiforgery="true" runat="server" class="needs-validation m-3" enctype="multipart/form-data"  novalidate>
                <div class="form-floating mb-3">
                    <textarea class="form-control @theme" placeholder="Leave a comment here" id="userComment" required style="height: 100px" name="userComment"></textarea>
                    <label for="userComment">@langLocalizer["Comment"]</label>
                </div>
                <div class="form-floating @theme">
                    <button type="submit" class="btn btn-outline-primary" id="sendBtn">@langLocalizer["Sumbit"]</button>
                </div>
            </form>
            <div id="ReviewComments" data-bs-spy="scroll" data-bs-offset="50" class="">
                @await Html.PartialAsync("_Comments", comments)
            </div>
        </div>
        
    }
</div>

<script src="~/js/microsoft/signalr/dist/browser/signalr.min.js"></script>
<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/comment")
        .build();
 
    hubConnection.on("Receive", function (userComment, userName) {
        let commentContainer = document.createElement('div');
        commentContainer.classList.add("container");
        //
        let commentSpace = document.createElement('div');
        commentSpace.classList.add("shadow", "rounded", "m-3", "d-flex", "flex-column", "justify-content-start", "@theme");
        //
        let pAuthor = document.createElement('p');
        pAuthor.classList.add("ms-2", "mt-2");
        pAuthor.innerHTML = "<b>@langLocalizer["Author"]: </b>" + userName;
        //
        let pComment = document.createElement('p');
        pComment.classList.add("ms-2");
        pComment.innerHTML = "<b>@langLocalizer["Comment"]:</b> <br>" + userComment.split("\n").join("<br>");
        //
        commentSpace.append(pAuthor);
        commentSpace.append(pComment);
        commentContainer.append(commentSpace);
        //
        document.getElementById("ReviewComments").prepend(commentContainer);
    });
 
    document.getElementById("sendBtn").addEventListener("click", function (e) {
        let userComment = document.getElementById("userComment").value;
 
        hubConnection.invoke("Send", { "userComment": userComment });
            
    });
 
    hubConnection.start();
</script>